-- Librarian and Report Tables: A report is linked to a librarian through the LibrarianID in the Report table. 
-- This suggests that each report is generated by a specific librarian.



-- Book Table: This table stand alone with primary details about books but is referenced in other tables.



-- Patron Table: Represents library patrons. 
-- This table is central to several relationships, particularly with Reservation, Transaction, and Notification tables.



-- Reservation Table: Links both Patron and Librarian tables, suggesting that a reservation record involves both a patron 
-- and a librarian. Additionally, it is connected to the BookReservation table to indicate which books are reserved.



-- Transaction Table: Connects books to patrons, indicating which patron has borrowed which book. 
-- It tracks borrowing and return dates.



-- Notification Table: Linked to the Patron table, indicating that notifications are sent to patrons.



-- BookReservation (Many-to-Many Relationship Table): This table connects the Book and Reservation tables, 
-- indicating which books are associated with which reservations.



-- PatronBook (Many-to-Many Relationship Table): Connects Patron and Book tables, 
-- used for tracking which patrons are interested in or have borrowed which books.


CREATE TABLE Librarian (
    ID INT PRIMARY KEY,
    Email VARCHAR(255) NOT NULL,
    Username VARCHAR(255) NOT NULL,
    Password VARCHAR(255) NOT NULL
);


CREATE TABLE Report (
    ID INT PRIMARY KEY,
    Type VARCHAR(255) NOT NULL,
    GeneratedDate DATE NOT NULL,
    LibrarianID INT
);


CREATE TABLE Book (
    ID INT PRIMARY KEY,
    Status VARCHAR(255) NOT NULL,
    Title VARCHAR(255) NOT NULL,
    Author VARCHAR(255) NOT NULL,
    ISBN VARCHAR(255) NOT NULL,
    PublicationDate DATE NOT NULL
);


CREATE TABLE Patron (
    ID INT PRIMARY KEY,
    Username VARCHAR(255) NOT NULL,
    Password VARCHAR(255) NOT NULL,
    ContactInformation VARCHAR(255) NOT NULL
);


CREATE TABLE Reservation (
    ID INT PRIMARY KEY,
    Date DATE NOT NULL,
    PatronID INT,
    LibrarianID INT
);



CREATE TABLE Transaction (
    ID INT PRIMARY KEY,
    BorrowDate DATE NOT NULL,
    DueDate DATE NOT NULL,
    ReturnDate DATE,
    BookID INT,
    PatronID INT
);


CREATE TABLE Notification (
    ID INT PRIMARY KEY,
    Type VARCHAR(255) NOT NULL,
    SentDate DATE NOT NULL,
    PatronID INT
);


CREATE TABLE BookReservation (
    BookID INT,
    ReservationID INT,
    PRIMARY KEY (BookID, ReservationID)
);


CREATE TABLE PatronBook (
    PatronID INT,
    BookID INT,
    PRIMARY KEY (PatronID, BookID)
);


ALTER TABLE Report ADD FOREIGN KEY (LibrarianID) REFERENCES Librarian(ID);

ALTER TABLE Reservation ADD FOREIGN KEY (PatronID) REFERENCES Patron(ID);
ALTER TABLE Reservation ADD FOREIGN KEY (LibrarianID) REFERENCES Librarian(ID);

ALTER TABLE Transaction ADD FOREIGN KEY (BookID) REFERENCES Book(ID);
ALTER TABLE Transaction ADD FOREIGN KEY (PatronID) REFERENCES Patron(ID);

ALTER TABLE Notification ADD FOREIGN KEY (PatronID) REFERENCES Patron(ID);

ALTER TABLE BookReservation ADD FOREIGN KEY (BookID) REFERENCES Book(ID);
ALTER TABLE BookReservation ADD FOREIGN KEY (ReservationID) REFERENCES Reservation(ID);

ALTER TABLE PatronBook ADD FOREIGN KEY (PatronID) REFERENCES Patron(ID);
ALTER TABLE PatronBook ADD FOREIGN KEY (BookID) REFERENCES Book(ID);
